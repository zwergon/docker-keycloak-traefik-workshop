version: "3.4"

services:
  keycloak_db:
    image: postgres:11.2-alpine
    hostname: keycloak_db
    container_name: "keycloak_db"
    environment:
        - POSTGRES_DB=keycloak
        - POSTGRES_USER=keycloak
        - POSTGRES_PASSWORD=password
        - POSTGRES_ROOT_PASSWORD=password
    networks:
      - transit_idp
    volumes:
      - ./data:/var/lib/postgresql/data
 

  keycloak:
    image: quay.io/keycloak/keycloak:17.0.0
    hostname: keycloak
    container_name: "keycloak"
    environment:
      - DB_VENDOR=POSTGRES
      - DB_ADDR=keycloak_db
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_SCHEMA=public
      - DB_PASSWORD=password
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      #- KC_HTTPS_CERTIFICATE_FILE=/opt/keycloak/conf/server.crt.pem
      #- KC_HTTPS_CERTIFICATE_KEY_FILE=/opt/keycloak/conf/server.key.pem
      #- KC_PROXY=edge
      #- PROXY_ADDRESS_FORWARDING=true
      - KEYCLOAK_LOGLEVEL=DEBUG
      
    depends_on:
       - "keycloak_db"
    
    networks:
      - transit_idp
    expose:
      - 8080
      
    #volumes:
      #- ./server.crt.pem:/opt/keycloak/conf/server.crt.pem
      #- ./server.key.pem:/opt/keycloak/conf/server.key.pem
    
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=transit_idp"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
      #- "traefik.http.services.keycloak.loadbalancer.server.port=8443"
      - "traefik.http.routers.keycloak.rule=Host(`auth.localhost`)"
      - "traefik.http.routers.keycloak.entrypoints=http"
      #- "traefik.http.routers.keycloak.tls=true"
      #- "traefik.http.routers.keycloak.tls.certResolver=myresolver"
      
    command: ["start-dev"]


networks:
  transit_idp:
    external: true
